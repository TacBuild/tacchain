services:

# 1. Spin up local bitcoin network
  bitcoindsim:
    build:
      context: ./bitcoindsim/
      dockerfile: ./Dockerfile
    platform: linux/amd64
    networks:
      localnet:
        ipv4_address: 192.168.10.2
    environment:
      - ZMQ_SEQUENCE_PORT=29000
      - ZMQ_RAWBLOCK_PORT=29001
      - ZMQ_RAWTR_PORT=29002
      - RPC_PORT=18443
      - RPC_USER=rpcuser
      - RPC_PASS=rpcpass
      - WALLET_PASS=walletpass
      - WALLET_NAME=default
      - BTCSTAKER_WALLET_NAME=btcstaker
      - BTCSTAKER_WALLET_ADDR_COUNT=3
      - GENERATE_INTERVAL_SECS=10
    ports:
      - "18443:18443"
      - "29000-29002:29000-29002"
    volumes:
      - ./.babylond/bitcoin:/bitcoindsim/bitcoin:Z

# 2. Spin up bitcoin indexer
  electrs:
    image: mempool/electrs:v3.1.0
    container_name: electrs
    platform: linux/amd64
    networks:
      localnet:
        ipv4_address: 192.168.10.31
    depends_on:
      - bitcoindsim
    environment:
      - ELECTRS_NETWORK=regtest
      - ELECTRS_COOKIE=rpcuser:rpcpass
      - ELECTRS_DAEMON_RPC_ADDR=bitcoindsim:18443
      - ELECTRS_DB_DIR=/electrs/.electrs/db
    ports:
      - "8080:8080"
      - "3003:3003"
    volumes:
      - ../.babylond/electrs:/data:Z
      - ../.babylond/bitcoin:/bitcoin/.bitcoin:Z
    command:
      [ "--cookie", "rpcuser:rpcpass",
        "--network", "regtest",
        "--electrum-rpc-addr", "0.0.0.0:8080",
        "--http-addr", "0.0.0.0:3003",
        "--db-dir", "/electrs/.electrs/db/",
        "--daemon-rpc-addr", "bitcoindsim:18443",
        "--daemon-dir", "/bitcoin/.bitcoin",
        "-v",
        "--address-search",
        "--cors", "*",
        "--timestamp"
      ]

# 3. Spin up local babylon network
  babylond:
    build:
      context: https://github.com/babylonlabs-io/babylon.git#ec3dc80bff2c15e4c44525b3e91d963f53bb617d
      dockerfile: contrib/images/babylond/Dockerfile
    volumes:
      - "./.babylond:/data"
      - "./init-babylond.sh:/init-babylond.sh"
    command: >
      bash -c "/init-babylond.sh && babylond start --home /data/node0/babylond"
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    environment:
      - BABYLON_BLS_PASSWORD=password
      - HOMEDIR=/data/node0/babylond
    ports:
      - "26656-26657:26656-26657"
      - "1317:1317"
      - "9090:9090"
      - "2345:2345"
    networks:
      localnet:
        ipv4_address: 192.168.10.3

# 4. Fund all service accounts on babylon network (ibc relayer, finality provider, etc.)
  babylond-fund-accounts:
    build:
      context: https://github.com/babylonlabs-io/babylon.git#ec3dc80bff2c15e4c44525b3e91d963f53bb617d
      dockerfile: contrib/images/babylond/Dockerfile
    volumes:
      - "./.babylond/node0/babylond:/data"
      - "./fund-accounts.sh:/fund-accounts.sh"
    environment:
      - BINARY=babylond
      - HOMEDIR=/data
      - SENDER_KEY=test-spending-key
      - CHAIN_ID=babylon-localnet
      - RPC_URL=http://babylond:26657
      - AMOUNT=100000000000
      - GAS_PRICES=1
      - DENOM=ubbn
      - RELAYER_ADDRESS=bbn1mjyd6ksf0ay5j5ta3x7hqeptxs6j3cr9lawv3d
      - FPD_ADDRESS=bbn1jswmc6x22vlgs507n2wuqmparcqun67v0mg93p
      - EOTSMANAGER_ADDRESS=bbn1fezaz37eqxxgg5rzm3xg5u53qahp0q6ae55ktt
    command: >
      bash -c "/fund-accounts.sh"
    networks:
      localnet:
        ipv4_address: 192.168.10.4
    depends_on:
      - babylond

# 5. Spin up vigilante services on babylon network
  vigilante-reporter:
    build:
      context: https://github.com/babylonlabs-io/vigilante.git#v0.23.7
    command: >
      vigilante reporter --config /home/vigilante/vigilante.yml 2>&1 | tee /home/vigilante/config/reporter.log
    networks:
      localnet:
        ipv4_address: 192.168.10.5
    volumes:
      - ./.babylond/vigilante:/home/vigilante/config
      - ./vigilante.yml:/home/vigilante/vigilante.yml
    depends_on:
      - bitcoindsim
      - babylond
    restart: unless-stopped

  vigilante-submitter:
    build:
      context: https://github.com/babylonlabs-io/vigilante.git#v0.23.7
    command: >
      vigilante submitter --config /home/vigilante/vigilante.yml 2>&1 | tee /home/vigilante/config/submitter.log
    networks:
      localnet:
        ipv4_address: 192.168.10.6
    volumes:
      - ./.babylond/vigilante:/home/vigilante/config
      - ./vigilante.yml:/home/vigilante/vigilante.yml
    depends_on:
      - bitcoindsim
      - babylond
    restart: unless-stopped

# TODO: fix 'error: unknown field "timeout_timestamp" in tx.TxBody: tx parse error' in vigilante-monitor, also appears in babylon-edge-deployment example
  vigilante-monitor:
    build:
      context: https://github.com/babylonlabs-io/vigilante.git#v0.23.7
    command: >
      vigilante monitor --config /home/vigilante/vigilante.yml --genesis /home/vigilante/genesis.json 2>&1 | tee /home/vigilante/config/monitor.log
    networks:
      localnet:
        ipv4_address: 192.168.10.7
    volumes:
      - ./.babylond/vigilante:/home/vigilante/config
      - ./vigilante.yml:/home/vigilante/vigilante.yml
      - ./.babylond/node0/babylond/config/genesis.json:/home/vigilante/genesis.json
    depends_on:
      - bitcoindsim
      - babylond
    restart: unless-stopped

  vigilante-bstracker:
    build:
      context: https://github.com/babylonlabs-io/vigilante.git#v0.23.7
    command: >
      vigilante bstracker --config /home/vigilante/vigilante.yml 2>&1 | tee /home/vigilante/config/submitter.log
    networks:
      localnet:
        ipv4_address: 192.168.10.8
    volumes:
      - ./.babylond/vigilante:/home/vigilante/config
      - ./vigilante.yml:/home/vigilante/vigilante.yml
    depends_on:
      - bitcoindsim
      - babylond
    restart: unless-stopped

# TODO: 5. Spin up covenant services on babylon network

# 6. Spin up finality provider services on babylon network
  eotsmanager:
    build:
      context: https://github.com/babylonlabs-io/finality-provider.git#951d696f9bf7ad2a55631907983a92eb42cbb1c6
    command: bash -c "/home/finality-provider/init-eotsmanager.sh && eotsd start"
    networks:
      localnet:
        ipv4_address: 192.168.10.9
    ports:
      - "15825:15813"
    volumes:
      - ./.babylond/eotsmanager:/home/finality-provider/.eotsd
      - ./eotsd.conf:/home/finality-provider/.eotsd/eotsd.conf
      - ./init-eotsmanager.sh:/home/finality-provider/init-eotsmanager.sh
    depends_on:
      - babylond
    restart: unless-stopped

  finality-provider:
    build:
      context: https://github.com/babylonlabs-io/finality-provider.git#951d696f9bf7ad2a55631907983a92eb42cbb1c6
    command: fpd start
    networks:
      localnet:
        ipv4_address: 192.168.10.10
    ports:
      - "15822:15812"
    volumes:
      - ./.babylond/finality-provider:/home/finality-provider/.fpd
      - ./fpd.conf:/home/finality-provider/.fpd/fpd.conf
    depends_on:
      - babylond
    restart: unless-stopped

# 6. Spin up a local tacchain network as a BSN consumer network
  tacchaind:
    build:
      context: ../..
      dockerfile: ./Dockerfile
    ports:
      - "27656-27657:27656-27657"
      - "1417:1417"
      - "9190:9190"
    volumes:
      - ./.babylond/tacchaind:/home/tacchaind/.tacchaind
      - ./init-tacchaind.sh:/home/init-tacchaind.sh
    environment:
      HOMEDIR: /home/tacchaind/.tacchaind
    command: >
      bash -c "/home/init-tacchaind.sh && tacchaind start --home /home/tacchaind/.tacchaind --chain-id tacchain_2391-1"
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    networks:
      localnet:
        ipv4_address: 192.168.10.11
    restart: unless-stopped

# 7. Initialize babylon contracts on tacchain network
  tacchaind-init-babylon-contracts:
    build:
      context: ../..
      dockerfile: ./Dockerfile
    volumes:
      - ./.babylond/tacchaind:/home/tacchaind/.tacchaind
      - ./contracts:/home/tacchaind/contracts
      - ./init-contracts.sh:/home/tacchaind/init-contracts.sh
    environment:
      HOMEDIR: /home/tacchaind/.tacchaind
    command: >
      bash -c "/home/tacchaind/init-contracts.sh"
    networks:
      localnet:
        ipv4_address: 192.168.10.12
    depends_on:
      - tacchaind

# 8. Fund all service accounts on tacchain network (ibc relayer, finality provider, etc.)
  tacchaind-fund-accounts:
    build:
      context: https://github.com/babylonlabs-io/babylon.git#ec3dc80bff2c15e4c44525b3e91d963f53bb617d
      dockerfile: contrib/images/babylond/Dockerfile
    volumes:
      - ./.babylond/tacchaind:/home/tacchaind/.tacchaind
      - "./fund-accounts.sh:/fund-accounts.sh"
    command: >
      bash -c "/fund-accounts.sh"
    networks:
      localnet:
        ipv4_address: 192.168.10.13
    depends_on:
      - tacchaind-init-babylon-contracts

# TODO: 9. Spin up finality provider services on tacchain network

# 10. Spin up ibc relayer
  hermes-ibc-relayer:
    image: informalsystems/hermes:1.13.1
    restart: unless-stopped
    volumes:
      - ./.babylond/hermes:/home/hermes
      - ./hermes-ibc-relayer/mnemonic.txt:/home/hermes-ibc-relayer/mnemonic.txt
      - ./hermes-ibc-relayer/start.sh:/home/hermes-ibc-relayer/start.sh
      - ./hermes-ibc-relayer/config.toml:/home/hermes/.hermes/config.toml
    entrypoint: /home/hermes-ibc-relayer/start.sh
    networks:
      localnet:
        ipv4_address: 192.168.10.14
    ports:
      - "3000:3000"
      - "3001:3001"
    depends_on:
      - tacchaind-fund-accounts
      - babylond-fund-accounts

# TODO: 11. Register tacchain as a consumer chain on babylon network

# TODO: 12. Spin up btcstaker
# TODO: 13.

  # btc-staker:
  #   container_name: btc-staker
  #   image: babylonlabs-io/btc-staker
  #   networks:
  #     localnet:
  #       ipv4_address: 192.168.10.11
  #   environment:
  #     - BTCSTAKER_USERNAME=rpcuser
  #     - BTCSTAKER_PASSWORD=rpcpass
  #   volumes:
  #     - ../.babylond/btc-staker:/home/btcstaker/.stakerd
  #   ports:
  #     - "15912:15812"
  #   depends_on:
  #     - bitcoindsim
  #     - babylondnode0
  #   restart: unless-stopped


  # consumer-fp:
  #   container_name: consumer-fp
  #   image: babylonlabs-io/finality-provider
  #   command: fpd start
  #   networks:
  #     localnet:
  #       ipv4_address: 192.168.10.13
  #   volumes:
  #     - ../.babylond/consumer-fp:/home/finality-provider/.fpd
  #   depends_on:
  #     - babylondnode0
  #     - consumer-eotsmanager
  #     - ibcsim-bcd
  #   restart: unless-stopped

  # consumer-eotsmanager:
  #   container_name: consumer-eotsmanager
  #   image: babylonlabs-io/finality-provider
  #   command: eotsd start
  #   networks:
  #     localnet:
  #       ipv4_address: 192.168.10.15
  #   volumes:
  #     - ../.babylond/consumer-eotsmanager:/home/finality-provider/.eotsd
  #   depends_on:
  #     - babylondnode0
  #   restart: unless-stopped

  # covenant-signer:
  #   container_name: covenant-signer
  #   image: babylonlabs-io/covenant-signer
  #   command: covenant-signer start
  #   networks:
  #     localnet:
  #       ipv4_address: 192.168.10.16
  #   volumes:
  #     - ../.babylond/covenant-signer:/home/covenant-signer/.signer
  #   depends_on:
  #     - babylondnode0
  #   restart: unless-stopped

  # covenant-emulator:
  #   container_name: covenant-emulator
  #   image: babylonlabs-io/covenant-emulator
  #   command: covd start
  #   networks:
  #     localnet:
  #       ipv4_address: 192.168.10.17
  #   volumes:
  #     - ../.babylond/covenant-emulator:/home/covenant-emulator/.covd
  #   depends_on:
  #     - babylondnode0
  #     - covenant-signer
  #   restart: unless-stopped

networks:
  localnet:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.10.0/25
