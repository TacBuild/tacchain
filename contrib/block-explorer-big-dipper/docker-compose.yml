name: block-explorer-big-dipper
services:
  postgres-db:
    image: postgres:14-alpine
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-callisto}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-callisto}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -U ${POSTGRES_USER:-callisto} -d ${POSTGRES_DB:-callisto}"]
    logging:
      options:
        max-size: 10m
        max-file: "3"
    restart: always
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    volumes:
      - ./callisto/database/schema:/docker-entrypoint-initdb.d
      - postgres-db-data:/var/lib/postgresql/data

  callisto-backend:
    build:
      context: ./callisto
      dockerfile: Dockerfile.cosmwasm
    command: bdjuno start --home=/callisto/config
    depends_on:
      - postgres-db
    ports:
      - ${CALLISTO_PORT:-3000}:3000
    volumes:
      - ./config:/callisto/config

  hasura-graphql:
    image: hasura/graphql-engine:v2.43.0.cli-migrations-v3
    depends_on:
      - postgres-db
      - callisto-backend
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER:-callisto}:${POSTGRES_PASSWORD:-password}@${POSTGRES_URL:-host.docker.internal}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-callisto}
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://${POSTGRES_USER:-callisto}:${POSTGRES_PASSWORD:-password}@${POSTGRES_URL:-host.docker.internal}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-callisto}
      HASURA_GRAPHQL_ENABLE_CONSOLE: ${HASURA_GRAPHQL_ENABLE_CONSOLE:-true}
      HASURA_GRAPHQL_DEV_MODE: ${HASURA_GRAPHQL_DEV_MODE:-false}
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: ${HASURA_GRAPHQL_ENABLED_LOG_TYPES:-startup, http-log, webhook-log, websocket-log, query-log}
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET:-12345}
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      ACTION_BASE_URL: ${HASURA_ACTION_BASE_URL:-http://host.docker.internal:3000}
    restart: always
    ports:
      - ${HASURA_PORT:-8080}:8080
    volumes:
      - ./callisto/hasura/metadata:/hasura-metadata

  bigdipper-frontend:
    build:
      context: ./big-dipper-2.0-cosmos
      dockerfile: Dockerfile
      target: runner
      args:
        PROJECT_NAME: ${BIG_DIPPER_PROJECT_NAME:-web}
        NEXT_PUBLIC_CHAIN_TYPE: ${BIG_DIPPER_CHAIN_TYPE:-testnet}
        NEXT_PUBLIC_GRAPHQL_URL: ${BIG_DIPPER_GRAPHQL_URL:-http://localhost:8080/v1/graphql}
        NEXT_PUBLIC_GRAPHQL_WS: ${BIG_DIPPER_GRAPHQL_WS:-ws://localhost:8080/v1/graphql}
        NEXT_PUBLIC_RPC_WEBSOCKET: ${BIG_DIPPER_RPC_WEBSOCKET:-ws://localhost:26657/websocket}
        PORT: ${BIG_DIPPER_PORT:-3001}
    depends_on:
      - postgres-db
      - callisto-backend
      - hasura-graphql
    restart: always
    platform: linux/amd64
    ports:
      - ${BIG_DIPPER_PORT:-3001}:${BIG_DIPPER_PORT:-3001}

volumes:
  postgres-db-data:
